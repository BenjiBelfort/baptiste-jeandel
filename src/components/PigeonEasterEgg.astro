---
const PIGEON_SRC = "/images/annimation/pigeon.png";
const CAT_SRC    = "/images/annimation/chat.png";
---

<style is:inline>
  @media (max-width:1023px){
    #pigeon-wrap, #pigeon-cat { display:none !important; }
  }

  /* PIGEON posé — position + TAILLE */
  #pigeon-wrap{
    position: absolute;
    left: calc(50% + 50px);
    bottom: 2.8rem;
    transform: translateX(-50%);
    z-index: 5;
    pointer-events: auto;
    width: max-content;
  }

  :root { --pigeon-size: 70px; }

  #pigeon{
    width: var(--pigeon-size) !important;
    height: auto !important;
    aspect-ratio: 1 / 1;
    max-width: none !important;
    max-height: none !important;
    display: block;
    cursor: pointer;
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    filter: drop-shadow(0 2px 0 rgba(0,0,0,.2));
    z-index: 1;
  }

  /* BULLE */
  #pigeon-bubble{
    position: absolute;
    left: 50%;
    bottom: 100%;
    transform: translate(-50%,-8px);
    background: #fff; color:#000;
    border: 1px solid #000; border-radius: .5rem;
    padding: .4rem .6rem;
    font-size: .95rem;
    line-height: 1.15;
    text-align: center;
    white-space: nowrap;
    display: inline-block;
    max-width: none;
    opacity: 0;
    transition: opacity .18s ease, transform .18s ease;
    pointer-events: none;
    box-shadow: 0 2px 0 rgba(0,0,0,.2);
    z-index: 2;
    will-change: opacity, transform;
  }

  #pigeon-bubble::before,
  #pigeon-bubble::after{ display: none !important; content: none !important; }

  #pigeon-wrap:hover #pigeon-bubble{
    opacity:1; transform:translate(-50%,-12px);
  }

  #pigeon-wrap.msg-lock #pigeon-bubble{
    opacity:1 !important;
    transform:translate(-50%,-12px) !important;
    white-space: pre;
  }

  #pigeon-bubble.bubble--fade{
    opacity: 0 !important;
    transform: translate(-50%,-6px);
    transition: opacity .35s ease, transform .35s ease;
  }

  #pigeon-wrap.msg-lock #pigeon-bubble.bubble--fade{
    opacity: 0 !important;
    transform: translate(-50%,-6px) !important;
  }

  #pigeon-wrap:hover #pigeon-bubble.bubble--fade{
    opacity: 0 !important;
    transform: translate(-50%,-6px) !important;
  }

  /* CHAT */
  #pigeon-cat{
    position: fixed;
    right: -140px;
    width: 80px;
    z-index: 999;
    pointer-events: none;
    transform: translateX(0) scale(1);
    transition: transform .3s ease;
    filter: drop-shadow(0 4px 0 rgba(0,0,0,.2));
  }
  #pigeon-cat.cat--in { transform: translateX(-130px) scale(.85); }
  #pigeon-cat.cat--out{ transform: translateX(0)      scale(1);   }
</style>

<div id="pigeon-wrap" aria-hidden="true">
  <div id="pigeon-bubble">envoyer un pigeon voyageur</div>
  <img id="pigeon" src={PIGEON_SRC} alt="" />
</div>

<img id="pigeon-cat" src={CAT_SRC} alt="" />

<script is:inline>
(() => {
  const wrap   = document.getElementById('pigeon-wrap');
  const bubble = document.getElementById('pigeon-bubble');
  const pigeon = document.getElementById('pigeon');
  const cat    = document.getElementById('pigeon-cat');
  if (!wrap || !bubble || !pigeon || !cat) return;

  const DEFAULT_MSG = 'envoyer un pigeon voyageur';

  const BLOCK_MSG   = 'décollage impossible : le chat est là !\nUtilisez plutôt le bouton ci-dessous. merci';

  const DISPLAY_MS  = 3500;
  const FADE_MS     = 350;

  let locked = false;
  let timer  = null;

  let primed = false;
  const primeHover = () => {
    if (primed) return;
    bubble.classList.remove('bubble--fade');
    void bubble.offsetWidth;
    primed = true;
  };

  wrap.addEventListener('mouseenter', () => {
    primeHover();
    if (locked) return;
    cat.classList.add('cat--in');
    cat.classList.remove('cat--out');
  });
  wrap.addEventListener('mouseleave', () => {
    if (locked) return;
    cat.classList.remove('cat--in');
    cat.classList.add('cat--out');
  });

  wrap.addEventListener('click', () => {
    if (locked) return;
    locked = true;

    wrap.classList.add('msg-lock');
    bubble.classList.remove('bubble--fade');
    bubble.textContent = BLOCK_MSG;

    cat.classList.add('cat--in');
    cat.classList.remove('cat--out');

    clearTimeout(timer);
    timer = setTimeout(() => {

      bubble.classList.add('bubble--fade');

      const onFadeEnd = (e) => {
        if (e.propertyName !== 'opacity') return;
        bubble.removeEventListener('transitionend', onFadeEnd);

        wrap.classList.remove('msg-lock');
        bubble.classList.remove('bubble--fade');
        bubble.style.opacity = '0';
        bubble.textContent = DEFAULT_MSG;

        cat.classList.remove('cat--in');
        cat.classList.add('cat--out');

        locked = false;
      };
      bubble.addEventListener('transitionend', onFadeEnd);
    }, DISPLAY_MS);
  });

  function positionCatY(){
    const r = pigeon.getBoundingClientRect();
    cat.style.top = Math.round(r.top + r.height + 30) + 'px';
  }
  window.addEventListener('resize', positionCatY);
  window.addEventListener('scroll', positionCatY, { passive:true });

  if ('decode' in pigeon) {
    pigeon.decode().finally(positionCatY);
  } else {
    positionCatY();
  }
})();
</script>
