---
import FunkyButton from '@/components/FunkyButton.astro';

const notes = [
  { file: '/hero-notes/note1.png',  label: null },
  { file: '/hero-notes/note2.png',  label: null },
  { file: '/hero-notes/note3.png',  label: 'Archives Sonores' },
  { file: '/hero-notes/note4.png',  label: 'Spectacle Enfants' },
  { file: '/hero-notes/note5.png',  label: 'Formation Petite Enfance' },
  { file: '/hero-notes/note6.png',  label: 'Éveil Musical' },
  { file: '/hero-notes/note7.png',  label: 'Musicothérapie' },
  { file: '/hero-notes/note8.png',  label: 'Formation EHPAD' },
  { file: '/hero-notes/note9.png',  label: 'Formation Handpan' },
  { file: '/hero-notes/note10.png', label: 'Concerts Handpan' },
  { file: '/hero-notes/note11.png', label: 'Relaxations Sonores' },
  { file: '/hero-notes/note12.png', label: 'Cours de Batterie' },
  { file: '/hero-notes/note13.png', label: 'Cours de Handpan' },
  { file: '/hero-notes/note14.png', label: null },
  { file: '/hero-notes/note15.png', label: null },
];
---

<section
  id="hero"
  class="relative grid overflow-hidden"
  style="--hero-bg: url('/images/instruments.webp');"
>
  <div
    class="absolute inset-0 z-0 bg-[image:var(--hero-bg)] bg-cover bg-center bg-no-repeat bg-scroll lg:bg-fixed sepia-25"
    aria-hidden="true"
  ></div>

  <div
    class="absolute inset-0 z-0 bg-white/50 backdrop-blur-sm lg:backdrop-blur"
    aria-hidden="true"
  ></div>

  <div class="relative z-20 row-start-2 place-self-center w-full">
    <div class="mx-auto px-4">
      <div class="mx-auto text-center p-6" style="max-width: var(--hero-content-w);">
        <h1 class="text-7xl md:text-9xl font-bold hand text-black drop-shadow">
          Baptiste Jeandel
        </h1>

        <h2 class="mt-4 text-lg sm:text-xl md:text-2xl font-semibold text-black">
          <strong>Musicothérapeute et formateur&nbsp;</strong>: ateliers, spectacles et formations pour la petite enfance, les EHPAD et le secteur sanitaire et social.
        </h2>

        <div class="mt-8 flex justify-center">
          <FunkyButton href="/#value-props" label="Découvrir" color="bg-slate-300" />
        </div>
      </div>
    </div>
  </div>

  <div class="absolute inset-x-0 bottom-0 z-10 lg:hidden overflow-hidden" aria-hidden="true">
    <img
      src="/hero-notes/mobile-hero.png"
      alt="Décor musical"
      class="w-[130%] max-w-none h-auto select-none pointer-events-none relative left-1/2 -translate-x-1/2"
      loading="eager"
    />
  </div>

  <div class="absolute inset-x-0 bottom-0 z-10 overflow-hidden hidden lg:block" aria-hidden="true">
    <div class="flex items-end justify-center" style="gap: 5px;">
      {notes.map((n, i) => (
        <div
          class="relative group transform translate-y-[20px] transition-transform duration-200 hover:translate-y-0"
          data-label={n.label ?? ''}
        >
          <img
            src={n.file}
            alt={n.label ?? `Note ${i + 1}`}
            class="block select-none align-bottom filter drop-shadow-sm transition-[filter] duration-200 group-hover:drop-shadow-xl"
            draggable="false"
          />
        </div>
      ))}
    </div>
  </div>

  <div
    id="hero-tooltip"
    class="hidden lg:flex items-center justify-center pointer-events-none
           absolute left-1/2 -translate-x-1/2 bottom-[50px] z-50
           px-4 py-2 hand font-bold text-black text-3xl md:text-4xl drop-shadow
           bg-white/70 rounded-md border border-stone-900 opacity-0 transition-opacity duration-200"
    aria-hidden="true">
  </div>

  <style is:global>
    @media (hover: none) and (pointer: coarse) {
      #hero .bg-fixed { background-attachment: scroll; }
    }
</style>

</section>

<script is:inline>
  const notes = document.querySelectorAll('[data-label]');
  const tooltip = document.getElementById('hero-tooltip');

  notes.forEach((note) => {
    const label = note.dataset.label;
    if (!label) return;

    note.addEventListener('mouseenter', () => {
      if (!tooltip) return;
      tooltip.textContent = label;
      tooltip.classList.remove('opacity-0');
      tooltip.classList.add('opacity-100');
    });

    note.addEventListener('mouseleave', () => {
      if (!tooltip) return;
      tooltip.classList.remove('opacity-100');
      tooltip.classList.add('opacity-0');
    });
  });
</script>
