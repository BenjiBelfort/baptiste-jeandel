---
const path = Astro.url.pathname;

const showRelaxShortcut = ["/", "/services", "/formations", "/cours"].includes(path);

const topMobile = 50;
const topDesktop = 69;


const startMobile = -110;
const startDesktop = -115;
const endMobile = 0;
const endDesktop = 0;
---

{showRelaxShortcut && (
  <div
    id="relax-shortcut"
    class="fixed left-0 right-0 z-40 pointer-events-none transition-transform duration-700 ease-in-out will-change-transform"
    style={`--top-mobile:${topMobile}px; --top-desktop:${topDesktop}px; --start-mobile:${startMobile}px; --start-desktop:${startDesktop}px; --end-mobile:${endMobile}px; --end-desktop:${endDesktop}px;`}
    aria-hidden="false"
  >
    <div class="max-w-6xl mx-auto px-4">
      <a
        href="/services/relaxations-sonores#dates-relax"
        class="relative inline-flex items-center gap-2 px-3 py-1.5 border border-stone-900 bg-red-300
               font-semibold -rotate-1 pointer-events-auto shadow-sm/30
               rounded-md cursor-pointer select-none touch-manipulation
               transform transition-all duration-200 hover:shadow-md/30"
      >
        <span class="relative z-10 text-sm text-left leading-tight">
          Voir les dates des<br />relaxations sonores
        </span>
      </a>
    </div>
  </div>
)}

<style is:inline>
  #relax-shortcut {
    top: var(--top-mobile);
    transform: translateY(var(--start-mobile));
  }
  #relax-shortcut.is-open {
    transform: translateY(var(--end-mobile));
  }

  @media (min-width: 768px) {
    #relax-shortcut {
      top: var(--top-desktop);
      transform: translateY(var(--start-desktop));
    }
    #relax-shortcut.is-open {
      transform: translateY(var(--end-desktop));
    }
  }
</style>

<script is:inline>
  (function () {
    const bar = document.getElementById('relax-shortcut');
    if (!bar) return;

    const on = () => bar.classList.add('is-open');
    const off = () => bar.classList.remove('is-open');

    const path = location.pathname;
    const alwaysOpen = path.startsWith('/services') || path.startsWith('/formations') || path.startsWith('/cours');

    if (alwaysOpen) {
      on();
      return;
    }

    if (path === '/') {

      const hero =
        document.querySelector('[data-hero]') ||
        document.getElementById('hero') ||
        document.querySelector('.hero') ||
        document.querySelector('main > section') ||
        null;

      const navOffset = Math.max(
        0,
        parseInt(getComputedStyle(bar).getPropertyValue('--top-desktop')) || 0
      );

      const heroHeight = hero ? Math.max(0, hero.getBoundingClientRect().height) : window.innerHeight;
      const triggerY = Math.max(0, heroHeight - navOffset);

      let ticking = false;
      const evaluate = () => {
        const y = window.scrollY || window.pageYOffset || 0;
        if (y >= triggerY) on();
        else off();
      };

      const onScroll = () => {
        if (!ticking) {
          window.requestAnimationFrame(() => {
            evaluate();
            ticking = false;
          });
          ticking = true;
        }
      };

      evaluate();
      window.addEventListener('scroll', onScroll, { passive: true });
      window.addEventListener('resize', evaluate, { passive: true });
      window.addEventListener('pageshow', evaluate);
      window.addEventListener('pagehide', () => {
        window.removeEventListener('scroll', onScroll);
        window.removeEventListener('resize', evaluate);
      });

      return;
    }
  })();
</script>
